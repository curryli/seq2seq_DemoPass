1-seq2seq.py:
batch_encoded:
[[6 3 9]
 [0 4 8]
 [0 0 7]]
decoder inputs:
[[1 1 1]
 [0 0 0]
 [0 0 0]
 [0 0 0]]
decoder predictions:
[[9 9 9]
 [4 4 4]
 [4 4 4]
 [4 4 4]]
head of the batch:
[3, 7, 3, 4, 4]
[8, 6, 7, 4]
[6, 3, 8, 8, 3, 2, 9]
[7, 9, 5, 2, 2, 9, 4]
[6, 9, 5, 6, 3, 2]
[3, 4, 7, 7]
[6, 5, 3, 9, 8, 9, 4]
[2, 6, 4, 4, 5, 4, 3]
[5, 4, 9, 7]
[5, 4, 7, 7, 2, 4, 4]
batch 0
  minibatch loss: 2.30664253235
  sample 1:
    input     > [6 6 7 6 4 8 7 0]
    predicted > [9 2 2 5 5 5 5 5 5]
  sample 2:
    input     > [9 7 6 3 0 0 0 0]
    predicted > [9 9 1 5 2 2 4 4 4]
  sample 3:
    input     > [7 6 9 4 9 3 7 4]
    predicted > [1 1 5 6 5 1 2 5 5]
()
batch 1000
  minibatch loss: 0.315889626741
  sample 1:
    input     > [7 4 3 2 8 8 2 7]
    predicted > [7 4 3 2 8 7 7 7 1]
  sample 2:
    input     > [4 2 5 3 8 2 3 2]
    predicted > [4 2 5 3 2 2 3 2 1]
  sample 3:
    input     > [9 8 8 0 0 0 0 0]
    predicted > [8 8 8 1 0 0 0 0 0]
()
batch 2000
  minibatch loss: 0.148829355836
  sample 1:
    input     > [3 3 4 2 2 9 3 9]
    predicted > [3 3 2 2 2 9 3 9 1]
  sample 2:
    input     > [3 7 3 0 0 0 0 0]
    predicted > [3 7 3 1 0 0 0 0 0]
  sample 3:
    input     > [6 8 7 8 4 2 0 0]
    predicted > [6 8 7 8 4 2 1 0 0]
()
batch 3000
  minibatch loss: 0.0983018353581
  sample 1:
    input     > [9 3 4 4 4 0 0 0]
    predicted > [9 4 4 4 4 1 0 0 0]
  sample 2:
    input     > [8 9 8 3 6 0 0 0]
    predicted > [8 9 8 3 6 1 0 0 0]
  sample 3:
    input     > [5 2 2 5 3 0 0 0]
    predicted > [5 2 2 5 3 1 0 0 0]
()